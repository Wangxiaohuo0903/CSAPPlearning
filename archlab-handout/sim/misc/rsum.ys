# sum_list.ys by huo
# Execution begins at address 0

        .pos 0
        irmovq stack,%rsp
        call main
        halt

# Sample linked list
        .align 8
    ele1:
        .quad 0x00a
        .quad ele2
    ele2:
        .quad 0x0b0
        .quad ele3
    ele3:
        .quad 0xc00
        .quad 0

    main:
        irmovq $8,%r8
        irmovq ele1,%rdi
        irmovq $0,%r9
        xorq %rax,%rax  #val=0
        call rsum_list
        ret

    rsum_list:
        andq %rdi,%rdi  #check ls!=0?
        jmp test

    else:
        mrmovq (%rdi),%r10 #val=ls>val
        addq %r8,%rdi   #ls=ls->next
        mrmovq (%rdi),%rdi
        addq %r10,%rax
        call rsum_list     
        ret
    test:
        jne else   #stop when 0
        ret

        .pos 0x200
    stack:
    